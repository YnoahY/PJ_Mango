/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-10-25 01:08:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import mango.mango.model.ReserveVO;

public final class myReserve_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("mango.mango.model.ReserveVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");

List<ReserveVO> list = (List<ReserveVO>) request.getAttribute("reserveList");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Document</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/myReserve.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<link rel='stylesheet'\r\n");
      out.write("   href='//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css' />\r\n");
      out.write("<script\r\n");
      out.write("   src='//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js'></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- 사이드바 -->\r\n");
      out.write("     <aside class=\"sideBar\">\r\n");
      out.write("       <div class=\"side_head\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/page/myPage.do\">MY HOME</a></div>\r\n");
      out.write("       <div class=\"side_body\">\r\n");
      out.write("         <div><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/page/myReserve.do\">예매 목록</a></div>\r\n");
      out.write("         <div><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/page/myOrdersPage.do\">구매 목록</a></div>\r\n");
      out.write("         <div><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/page/myAskList.do\">문의 목록</a></div>\r\n");
      out.write("         <div><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/page/memberModify.do\">회원정보수정</a></div>\r\n");
      out.write("       </div>\r\n");
      out.write("     </aside> \r\n");
      out.write("   <div class=\"myPage_wrap\">\r\n");
      out.write("\r\n");
      out.write("      <div class=\"my-page-container\">\r\n");
      out.write("         <div class=\"my-page-wrapper\">\r\n");
      out.write("            <div class=\"my-page-header\">예약한 영화 목록</div>\r\n");
      out.write("            <div class=\"movie-reserve-list\">\r\n");
      out.write("               ");

               if (list == null) {
               
      out.write("\r\n");
      out.write("               <div>예약한 영화가 없습니다</div>\r\n");
      out.write("               ");

               } else {
               for (int i = 0; i < list.size(); i++) {
                  ReserveVO reserveVO = list.get(i);
               
      out.write("\r\n");
      out.write("               <div class=\"movie-reserve\">\r\n");
      out.write("                  <div class=\"movie-reserve-title\">");
      out.print(reserveVO.getTitle());
      out.write("</div>\r\n");
      out.write("                  <div class=\"movie-reserve-theater-wrapper\">\r\n");
      out.write("                     <div>");
      out.print(reserveVO.getSelectedTheater());
      out.write("</div>\r\n");
      out.write("                     &nbsp;/&nbsp;\r\n");
      out.write("                     <div class=\"ticket-numeber\">");
      out.print(reserveVO.getTicketNumber());
      out.write("장\r\n");
      out.write("                     </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"movie-reserve-seats\">");
      out.print(reserveVO.getSelectedSeat());
      out.write("</div>\r\n");
      out.write("                  <div class=\"movie-reserve-date-wrapper\">\r\n");
      out.write("                     <div class=\"movie-reserve-date\">");
      out.print(reserveVO.getMovieDate());
      out.write("</div>\r\n");
      out.write("                     <div class=\"movie-reserve-runningTime\">");
      out.print(reserveVO.getRunningTime());
      out.write("</div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"movie\"></div>\r\n");
      out.write("\r\n");
      out.write("                  <div class=\"pay-information-wrapper\">\r\n");
      out.write("                     <div class=\"pay-information-date-wrapper\">\r\n");
      out.write("                        <div class=\"pay-information-date-title\">결제한 날</div>\r\n");
      out.write("                        <div class=\"pay-information-date\">");
      out.print(reserveVO.getPayVO().getPayDate());
      out.write("</div>\r\n");
      out.write("                     </div>\r\n");
      out.write("\r\n");
      out.write("                     <div class=\"pay-information-money-wrapper\">\r\n");
      out.write("                        <div class=\"pay-information-money-title\">결제한 비용</div>\r\n");
      out.write("                        <div class=\"pay-information-money\">");
      out.print(reserveVO.getPayVO().getPayMoney());
      out.write("원\r\n");
      out.write("                        </div>\r\n");
      out.write("                     </div>\r\n");
      out.write("\r\n");
      out.write("                     <div class=\"barcode-wrapper\">\r\n");
      out.write("                        <div>mango</div>\r\n");
      out.write("                        <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/images/barcode.png\">\r\n");
      out.write("                     </div>\r\n");
      out.write("\r\n");
      out.write("                  </div>\r\n");
      out.write("               </div>\r\n");
      out.write("               ");

               }
               
      out.write("\r\n");
      out.write("\r\n");
      out.write("               ");

               }
               
      out.write("\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
